{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webpack-template/webpack/bootstrap","webpack://webpack-template/webpack/runtime/define property getters","webpack://webpack-template/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-template/./src/LeftPanelDOM.js","webpack://webpack-template/./src/Modal.js","webpack://webpack-template/./src/localStorage.js","webpack://webpack-template/./src/projects.js","webpack://webpack-template/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://webpack-template/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://webpack-template/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://webpack-template/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://webpack-template/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://webpack-template/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://webpack-template/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://webpack-template/./node_modules/date-fns/locale/en-US.js","webpack://webpack-template/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://webpack-template/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://webpack-template/./node_modules/date-fns/_lib/defaultOptions.js","webpack://webpack-template/./node_modules/date-fns/constants.js","webpack://webpack-template/./node_modules/date-fns/constructFrom.js","webpack://webpack-template/./node_modules/date-fns/toDate.js","webpack://webpack-template/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://webpack-template/./node_modules/date-fns/_lib/normalizeDates.js","webpack://webpack-template/./node_modules/date-fns/compareAsc.js","webpack://webpack-template/./node_modules/date-fns/isLastDayOfMonth.js","webpack://webpack-template/./node_modules/date-fns/endOfDay.js","webpack://webpack-template/./node_modules/date-fns/endOfMonth.js","webpack://webpack-template/./node_modules/date-fns/differenceInMonths.js","webpack://webpack-template/./node_modules/date-fns/differenceInCalendarMonths.js","webpack://webpack-template/./node_modules/date-fns/differenceInSeconds.js","webpack://webpack-template/./node_modules/date-fns/differenceInMilliseconds.js","webpack://webpack-template/./node_modules/date-fns/_lib/getRoundingMethod.js","webpack://webpack-template/./node_modules/date-fns/startOfDay.js","webpack://webpack-template/./node_modules/date-fns/getDayOfYear.js","webpack://webpack-template/./node_modules/date-fns/differenceInCalendarDays.js","webpack://webpack-template/./node_modules/date-fns/startOfYear.js","webpack://webpack-template/./node_modules/date-fns/startOfWeek.js","webpack://webpack-template/./node_modules/date-fns/startOfISOWeek.js","webpack://webpack-template/./node_modules/date-fns/getISOWeekYear.js","webpack://webpack-template/./node_modules/date-fns/getISOWeek.js","webpack://webpack-template/./node_modules/date-fns/startOfISOWeekYear.js","webpack://webpack-template/./node_modules/date-fns/getWeekYear.js","webpack://webpack-template/./node_modules/date-fns/getWeek.js","webpack://webpack-template/./node_modules/date-fns/startOfWeekYear.js","webpack://webpack-template/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://webpack-template/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://webpack-template/./node_modules/date-fns/_lib/format/formatters.js","webpack://webpack-template/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://webpack-template/./node_modules/date-fns/_lib/protectedTokens.js","webpack://webpack-template/./node_modules/date-fns/isValid.js","webpack://webpack-template/./node_modules/date-fns/isDate.js","webpack://webpack-template/./node_modules/date-fns/format.js","webpack://webpack-template/./src/RightPanelDOM.js","webpack://webpack-template/./node_modules/date-fns/formatDistance.js","webpack://webpack-template/./src/LeftPanelEventListeners.js","webpack://webpack-template/./src/ModalEventListeners.js","webpack://webpack-template/./src/RightPanelEventListeners.js","webpack://webpack-template/./src/index.js","webpack://webpack-template/./src/checkLocalStorage.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const $leftSidePanel = document.querySelector(\".sidebar\");\nconst $yourProjects = $leftSidePanel.querySelector(\".yourProjects\");\nconst $projectInputField = $leftSidePanel.querySelector(\"#project\");\nconst $taskInputField = $leftSidePanel.querySelector(\"#todoName\");\n\n\nfunction renderProjectAdd(projectName) {\n    const div = document.createElement(\"div\");\n    div.classList.add(`${projectName}`, \"projectDiv\");\n    const divText = document.createElement(\"p\");\n    divText.textContent = `${projectName}`;\n    const divButton = document.createElement(\"button\");\n    divButton.textContent = \"×\";\n    divButton.classList.add(\"deleteProjectBtn\");\n    $yourProjects.appendChild(div);\n    div.appendChild(divText);\n    div.appendChild(divButton);\n}\n\nconst projectInput = {\n    getInputName() {\n        return $projectInputField.value;\n    },\n    clearInput() {\n        $projectInputField.value = \"\";\n    }\n}\n\nconst taskInput = {\n    getInputName() {\n        return $taskInputField.value;\n    },\n    clearInput() {\n        $taskInputField.value = \"\";\n    }\n}\n\nfunction validateProjectName(name) { // Validating through className, which is the same as the projectName ; pinpoint any collision of class name\n    const Divs = $yourProjects.querySelectorAll(\"div\");\n    for (const div of Divs) {\n        if (div.classList.contains(name)) {\n            alert(\"Error, projects cannot have the same name!\");\n            return false;\n        }\n    }\n    if (name.includes(\" \")) {\n        alert(\"Project names cannot contain whitespaces.\");\n        return false;\n    } else if (name == \"\") {\n        alert(\"Cannot have an empty project name!\");\n        return false;\n    }\n    return true; \n}\n\n\nexport {renderProjectAdd, $leftSidePanel, validateProjectName, projectInput, taskInput};","    import { $leftSidePanel, taskInput } from \"./LeftPanelDOM\";\n\n    const $todoModal = document.querySelector(\"#todoModal\");\n    const $projectDropdown = $todoModal.querySelector(\"#projectselect\");\n\n\n    const modifyTodoModal = {\n        openModal() {\n            $todoModal.style.display = \"block\";\n        },\n        closeModal() {\n            $todoModal.style.display = \"none\";\n        },\n        resetModal() {\n            const $modalInput = $todoModal.querySelector(\"input\");\n            const $modalInputDesc = $todoModal.querySelector(\".modalInputDesc\");\n            const $modalDueDate = $todoModal.querySelector(\"#dueDate\");\n            $modalInput.value = null;\n            $modalInputDesc.value = null;\n            $modalDueDate.value = null;\n        },\n        setInput() {\n            const $modalInput = $todoModal.querySelector(\"input\");\n            $modalInput.value = taskInput.getInputName();\n        },\n        addToDropdown(projectName) {\n            const $option = document.createElement(\"option\");\n            $option.style.value = projectName;\n            $option.textContent = projectName;\n            $projectDropdown.appendChild($option);\n        },\n        deleteFromDropdown(projectName) {\n            for (const child of $projectDropdown.children) {\n                if (child.textContent == projectName) {\n                    $projectDropdown.removeChild(child);\n                }\n            }\n        },\n        getSelectedProject() {\n            return $projectDropdown.value;\n        },\n\n        getModalDetails() {\n            const $modalInput = $todoModal.querySelector(\"input\");\n            const $modalInputDesc = $todoModal.querySelector(\".modalInputDesc\");\n            const $modalDueDate = $todoModal.querySelector(\"#dueDate\");\n            let title = $modalInput.value;\n            let description = $modalInputDesc.value;\n            let dueDate = $modalDueDate.value;\n            return {title, description, dueDate};\n        },\n\n        validateModalInput() {\n            const $titleInput = document.querySelector('.modalInputTask');\n            const $descriptionInput = document.querySelector('.modalInputDesc');\n            const $dateInput = document.querySelector(\"#dueDate\");\n            if ($titleInput.value && $descriptionInput.value && $dateInput.value) {\n                return true;\n            }\n            return false;\n        }\n    }\n\n\n    export {$todoModal, modifyTodoModal, $projectDropdown};\n\n","import { allTodos } from \".\";\nimport { renderProjectAdd } from \"./LeftPanelDOM\";\nimport storageAvailable from \"./checkLocalStorage\";\nimport { allProjects } from \"./projects\";\n\n\nfunction initializeStorage(allTodos, allProjects) {\n    if (storageAvailable(\"localStorage\")) {\n        if (!localStorage.getItem(\"todos\")) {\n            populateStorage(allTodos, allProjects);\n        } else {\n            renderInitialStorage();\n        }\n    } else {\n        alert(\"Your browser does not support localStorage!\");\n    }\n}\n\nfunction populateStorage() {\n    localStorage.setItem(\"projects\", JSON.stringify(allProjects));\n    localStorage.setItem(\"todos\", JSON.stringify(allTodos));\n    renderStorage();\n}\n\nfunction renderStorage() {\n    const storedProjects = JSON.parse(localStorage.getItem(\"projects\") || \"[]\");\n    allProjects.splice(0, allProjects.length, ...storedProjects);\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\") || \"[]\");\n    allTodos.splice(0, allTodos.length, ...storedTodos);\n    console.log(allProjects);\n    console.log(allTodos);\n}\n\nfunction renderInitialStorage() {\n    renderStorage();\n    for (const index in allProjects) {\n        renderProjectAdd(allProjects[index].title);\n    }\n\n}\n\n\nexport {initializeStorage, populateStorage}","import { modifyTodo } from \".\";\nimport { projectInput, renderProjectAdd, validateProjectName } from \"./LeftPanelDOM\";\nimport { $projectDropdown, modifyTodoModal } from \"./Modal\";\nimport { modifyDisplay } from \"./RightPanelDOM\";\nimport { populateStorage } from \"./localStorage\";\n\n\n\nconst allProjects = [];\n\nfunction createProject(title) {\n    this.title = title;\n    this.ids = [];\n}\n\nconst modifyProject = {\n    deleteProject(projectName) {\n        let index = this.returnProjectIndex(projectName);\n        for (const IDs in allProjects[index].ids) {\n            modifyTodo.popTodo(IDs);\n        }\n        allProjects.splice(index, 1);\n        populateStorage();\n    },\n\n    addProject(projectName) {\n        if (validateProjectName(projectName)) {\n            renderProjectAdd(projectName);\n            const projectObject = new createProject(projectName);\n            allProjects.push(projectObject);\n            populateStorage();\n            projectInput.clearInput();\n            modifyTodoModal.addToDropdown(projectName);\n            modifyDisplay.clearDisplay();\n            modifyDisplay.renderProject(projectName);\n        }\n    },\n\n    addTodoID(projectName, id) {\n        let index = this.returnProjectIndex(projectName);\n        allProjects[index].ids.push(id);\n    },\n\n    returnProjectIndex(projectName) { // Searches the array of allProjects and returns the index\n        for (let i = 0; i < allProjects.length; i++) {\n            if (allProjects[i].title == projectName) {\n                return i;\n            }\n        }\n    }\n}\n\nfunction checkProjectExistance() {\n    return !!($projectDropdown.children.length);\n}\n\nexport {createProject, allProjects, modifyProject, checkProjectExistance}; ","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { allTodos, modifyTodo } from \".\";\nimport { allProjects, modifyProject } from \"./projects\";\nimport { formatDistance, format } from \"date-fns\";\n\nconst $rightSidePanel = document.querySelector(\".display\"); \n\nconst modifyDisplay = {\n    renderHomePage() {\n        const $h1 = document.createElement(\"h1\");\n        const $h2 = document.createElement(\"h2\");\n        $h1.textContent = \"✨ Ready to be productive?\";\n        $h2.textContent = \"Select a project or create a new one to get started!\";\n        $rightSidePanel.appendChild($h1);\n        $rightSidePanel.appendChild($h2);\n    }, \n\n    renderProject(projectName) {\n        const $mainDiv = document.createElement(\"div\");\n        $mainDiv.classList.add(\"displayProjectDiv\");\n        const $headerDiv = document.createElement(\"div\");\n        $headerDiv.classList.add(\"displayProjectHeader\");\n        const $h1 = document.createElement(\"h1\");\n        const $h2 = document.createElement(\"h2\");\n        $h1.textContent = \"Your todo list!\";\n        $h2.textContent = `Project: ${projectName}`;\n        $rightSidePanel.appendChild($mainDiv);\n        $mainDiv.appendChild($headerDiv);\n        $headerDiv.appendChild($h1);\n        $headerDiv.appendChild($h2);\n        let index = modifyProject.returnProjectIndex(projectName);\n        if (allProjects[index].ids != null) { // Check if has any ToDos to render;\n            for (let todoID in allProjects[index].ids) {\n                this.renderTodo(allProjects[index].ids[todoID]);\n            }\n        } \n    },\n\n    renderTodo(todoID) {\n        const index = modifyTodo.returnTodoIndex(todoID);\n        const todoName = allTodos[index].title;\n        const todoDesc = allTodos[index].description;\n        const todoDueDate = allTodos[index].dueDate;\n        const $mainDiv = document.createElement(\"div\");\n        $mainDiv.classList.add(\"displayTodoDiv\");\n        const $contentDiv = document.createElement(\"div\");\n        $contentDiv.classList.add(\"displayTodoContent\");\n        const $completedCheckbox = document.createElement(\"input\");\n        $completedCheckbox.classList.add(todoID);\n        $completedCheckbox.type = \"checkbox\";\n        const $p1 = document.createElement(\"p\"); // Todo name\n        const $p2 = document.createElement(\"p\"); // Todo description\n        const $p3 = document.createElement(\"p\"); // Todo dueDate\n        $p1.textContent = todoName;\n        $p2.textContent = todoDesc;\n        $p3.textContent = `Due Date ${formatDistance(todoDueDate, new Date(), {\n            addSuffix: true\n          })} | exactly on ${format(todoDueDate, 'MM/dd/yyyy')}`;\n        const $hr = document.createElement(\"hr\");\n        $rightSidePanel.querySelector(\".displayProjectDiv\").appendChild($mainDiv);\n        $mainDiv.appendChild($completedCheckbox);\n        $mainDiv.appendChild($contentDiv);\n        $contentDiv.appendChild($p1);\n        $contentDiv.appendChild($p2);\n        $contentDiv.appendChild($p3);\n        $contentDiv.appendChild($hr);\n    },\n\n    returnActivePage() {\n        if ($rightSidePanel.querySelector(\".displayProjectDiv\") == null) {\n            return \"Home\";\n        } else {\n            const $h2 = $rightSidePanel.querySelector(\".displayProjectHeader h2\");\n            return $h2.textContent.slice(9); // returns projectName\n        }\n    },\n\n    clearDisplay() {\n        $rightSidePanel.replaceChildren();\n    },\n\n}\n\nexport {modifyDisplay, $rightSidePanel};","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { $leftSidePanel, projectInput, taskInput } from \"./LeftPanelDOM\";\nimport { modifyTodoModal } from \"./Modal\";\nimport { modifyDisplay } from \"./RightPanelDOM\";\nimport { checkProjectExistance, modifyProject } from \"./projects\";\n\nconst $createProjBtn = $leftSidePanel.querySelector(\".createProjectButton\");\nconst $createTaskBtn = $leftSidePanel.querySelector(\".createTaskButton\");\nconst $homeBtn = $leftSidePanel.querySelector(\".projectHome\");\nconst $projectsPanel = $leftSidePanel.querySelector(\".yourProjects\");\n\n$createTaskBtn.addEventListener('click', function() { // Create Task \n    if (checkProjectExistance()) {\n        modifyTodoModal.openModal();\n        modifyTodoModal.setInput();\n        taskInput.clearInput();\n    } else {\n        alert(\"Must create a project first!\");\n        taskInput.clearInput();\n    }\n})\n\n$createProjBtn.addEventListener('click', function() { // Create Project\n    modifyProject.addProject(projectInput.getInputName());\n});\n\n$leftSidePanel.addEventListener('click', function(e) {  // Delete project\n    if (e.target.classList.contains(\"deleteProjectBtn\")) {\n        const projectName = e.target.parentNode.querySelector(\"p\").textContent;\n        modifyProject.deleteProject(projectName); // removing from the array\n        modifyTodoModal.deleteFromDropdown(projectName); //removing from the dropdown\n        if (projectName == modifyDisplay.returnActivePage()) { //removing from the display\n            modifyDisplay.clearDisplay();\n            modifyDisplay.renderHomePage();\n        };\n        e.target.parentNode.remove();  // removing from the dom tree\n    }\n})\n\n\n$projectsPanel.addEventListener('click', function(e) {\n    if (e.target.querySelector(\"p\") != null) { // validate whether there is any p element even, fixes issues with deleting\n        const projectName = e.target.querySelector(\"p\").textContent;\n        if (modifyDisplay.returnActivePage() != projectName) {\n            modifyDisplay.clearDisplay();\n            modifyDisplay.renderProject(projectName); \n        }\n    }\n})\n\n$homeBtn.addEventListener('click', function() {\n    modifyDisplay.clearDisplay();\n    modifyDisplay.renderHomePage();\n})","import { modifyTodo } from \".\";\nimport { $todoModal, modifyTodoModal } from \"./Modal\";\n\n\nconst $closeButton = $todoModal.querySelector(\".close\");\nconst $addTodoBtn = $todoModal.querySelector(\".todoFooterDiv button\");\n\n$closeButton.addEventListener('click', function() {\n    modifyTodoModal.closeModal();\n})\n\n$addTodoBtn.addEventListener('click', function() {\n    if (modifyTodoModal.validateModalInput()) {\n        const todo = modifyTodoModal.getModalDetails();\n        modifyTodo.addTodo(todo.title, todo.description, todo.dueDate);\n    } else {\n        alert(\"FILL the title, description, and the dueDate!\");\n    }\n\n})\n","import { modifyTodo } from \".\";\n\nconst $rightSidePanel = document.querySelector(\".display\");\n$rightSidePanel.addEventListener('click', function(e) {\n    if (e.target.closest('.displayProjectDiv')) {\n        if (e.target.tagName == \"INPUT\") {\n            const todoID = e.target.className;\n            modifyTodo.deleteTodo(todoID);\n        }\n    }\n});","import \"./styles.css\";\nimport { modifyDisplay} from \"./RightPanelDOM.js\";\nimport \"./LeftPanelEventListeners.js\";\nimport \"./ModalEventListeners.js\";\nimport { modifyTodoModal } from \"./Modal.js\";\nimport { allProjects, modifyProject } from \"./projects.js\";\nimport \"./RightPanelEventListeners.js\";\nimport { initializeStorage, populateStorage } from \"./localStorage.js\";\n\nconst allTodos = [];\nmodifyDisplay.renderHomePage();\ninitializeStorage(allTodos, allProjects);\n\nfunction createTodo(title, description, dueDate) {\n    this.title = title;\n    this.description = description;\n    this.dueDate = dueDate;\n    this.id = crypto.randomUUID();\n}\n\n\nconst modifyTodo = {\n    addTodo(TodoName, TodoDesc, dueDate) {\n        const todoObj = new createTodo(TodoName, TodoDesc, dueDate);\n        let projectName = modifyTodoModal.getSelectedProject();\n        allTodos.push(todoObj);\n        modifyTodoModal.closeModal();\n        modifyTodoModal.resetModal();\n        modifyProject.addTodoID(projectName, todoObj.id);\n        modifyDisplay.clearDisplay();\n        modifyDisplay.renderProject(projectName);\n        populateStorage();\n    },\n\n    deleteTodo(todoID) {\n        const ID = this.returnTodoIndex(todoID);\n        const projectName = modifyDisplay.returnActivePage();\n        const projectIndex = modifyProject.returnProjectIndex(projectName);\n        allProjects[projectIndex].ids.splice(allProjects[projectIndex].ids.indexOf(ID), 1); // Removes the ID from allProjects \n        allTodos.splice(ID, 1); // Removes the ID from allTodos\n        modifyDisplay.clearDisplay();\n        modifyDisplay.renderProject(projectName);\n        populateStorage();   \n    },\n\n    popTodo(todoID) {\n        const ID = this.returnTodoIndex(todoID);\n        allTodos.splice(ID, 1); // Removes the ID from allTodos\n    },\n\n    returnTodoIndex(todoID) { // returns VIA todoID;\n        for (let i = 0; i < allTodos.length; i++) {\n            if (allTodos[i].id == todoID) {\n                return i;\n            }\n        }\n    } \n}\n\nexport {allTodos, modifyTodo};","export default function storageAvailable(type) {\n    let storage;\n    try {\n      storage = window[type];\n      const x = \"__storage_test__\";\n      storage.setItem(x, x);\n      storage.removeItem(x);\n      return true;\n    } catch (e) {\n      return (\n        e instanceof DOMException &&\n        e.name === \"QuotaExceededError\" &&\n        // acknowledge QuotaExceededError only if there's something already stored\n        storage &&\n        storage.length !== 0\n      );\n    }\n  }\n\n\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","$leftSidePanel","document","querySelector","$yourProjects","$projectInputField","$taskInputField","renderProjectAdd","projectName","div","createElement","classList","add","divText","textContent","divButton","appendChild","projectInput","getInputName","value","clearInput","taskInput","$todoModal","$projectDropdown","modifyTodoModal","openModal","style","display","closeModal","resetModal","$modalInput","$modalInputDesc","$modalDueDate","setInput","addToDropdown","$option","deleteFromDropdown","child","children","removeChild","getSelectedProject","getModalDetails","title","description","dueDate","validateModalInput","$titleInput","$descriptionInput","$dateInput","populateStorage","localStorage","setItem","JSON","stringify","allProjects","allTodos","renderStorage","storedProjects","parse","getItem","splice","length","storedTodos","console","log","createProject","this","ids","modifyProject","deleteProject","index","returnProjectIndex","IDs","modifyTodo","popTodo","addProject","name","Divs","querySelectorAll","contains","alert","includes","validateProjectName","projectObject","push","modifyDisplay","clearDisplay","renderProject","addTodoID","id","i","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","predicate","findIndex","pattern","test","object","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","replace","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","minutesInMonth","constructFromSymbol","Symbol","for","constructFrom","Date","constructor","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","normalizeDates","dates","normalize","bind","find","map","compareAsc","dateLeft","dateRight","diff","isLastDayOfMonth","in","setHours","endOfDay","setFullYear","endOfMonth","differenceInMonths","laterDate","earlierDate","laterDate_","workingLaterDate","earlierDate_","sign","difference","abs","differenceInCalendarMonths","setDate","setMonth","isLastMonthNotFull","differenceInSeconds","differenceInMilliseconds","method","roundingMethod","trunc","startOfDay","getDayOfYear","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","startOfYear","startOfWeek","locale","getDay","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","input","matched","$rightSidePanel","renderHomePage","$h1","$h2","$mainDiv","$headerDiv","todoID","renderTodo","returnTodoIndex","todoName","todoDesc","todoDueDate","$contentDiv","$completedCheckbox","type","$p1","$p2","$p3","RangeError","localizeOptions","assign","seconds","offsetInSeconds","months","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","formatStr","originalDate","parts","substring","firstCharacter","longFormatter","join","isToken","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","format","_message","subject","message","warn","warnOrThrowProtectedError","formatter","$hr","returnActivePage","replaceChildren","$createProjBtn","$createTaskBtn","$homeBtn","$projectsPanel","addEventListener","target","parentNode","remove","$closeButton","$addTodoBtn","todo","addTodo","closest","tagName","className","deleteTodo","createTodo","crypto","randomUUID","storage","window","removeItem","DOMException","storageAvailable","renderInitialStorage","TodoName","TodoDesc","todoObj","ID","projectIndex","indexOf"],"sourceRoot":""}