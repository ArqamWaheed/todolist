{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webpack-template/./src/RightPanelDOM.js","webpack://webpack-template/./src/LeftPanelDOM.js","webpack://webpack-template/./src/Modal.js","webpack://webpack-template/./src/projects.js","webpack://webpack-template/./src/LeftPanelEventListeners.js","webpack://webpack-template/./src/ModalEventListeners.js"],"sourcesContent":["const $rightSidePanel = document.querySelector(\".display\"); \n\nconst modifyDisplay = {\n    renderHomePage() {\n        const $h1 = document.createElement(\"h1\");\n        const $h2 = document.createElement(\"h2\");\n        $h1.textContent = \"✨ Ready to be productive?\";\n        $h2.textContent = \"Select a project or create a new one to get started!\";\n        $rightSidePanel.appendChild($h1);\n        $rightSidePanel.appendChild($h2);\n    }, \n\n    renderProject(projectName) {\n        const $mainDiv = document.createElement(\"div\");\n        $mainDiv.classList.add(\"displayProjectDiv\");\n        const $headerDiv = document.createElement(\"div\");\n        $headerDiv.classList.add(\"displayProjectHeader\");\n        const $h1 = document.createElement(\"h1\");\n        const $h2 = document.createElement(\"h2\");\n        $h1.textContent = \"Your todo list!\";\n        $h2.textContent = `Project: ${projectName}`;\n        $rightSidePanel.appendChild($mainDiv);\n        $mainDiv.appendChild($headerDiv);\n        $headerDiv.appendChild($h1);\n        $headerDiv.appendChild($h2);\n    },\n\n    returnActivePage() {\n        if ($rightSidePanel.querySelector(\".displayProjectDiv\") == null) {\n            return \"Home\";\n        } else {\n            const $h2 = $rightSidePanel.querySelector(\".displayProjectHeader h2\");\n            return $h2.textContent.slice(9); // returns projectName\n        }\n    },\n\n    clearDisplay() {\n        $rightSidePanel.replaceChildren();\n    },\n\n}\n\nexport {modifyDisplay};","const $leftSidePanel = document.querySelector(\".sidebar\");\nconst $yourProjects = $leftSidePanel.querySelector(\".yourProjects\");\nconst $projectInputField = $leftSidePanel.querySelector(\"#project\");\nconst $taskInputField = $leftSidePanel.querySelector(\"#todoName\");\n\n\nfunction renderProjectAdd(projectName) {\n    const div = document.createElement(\"div\");\n    div.classList.add(`${projectName}`, \"projectDiv\");\n    const divText = document.createElement(\"p\");\n    divText.textContent = `${projectName}`;\n    const divButton = document.createElement(\"button\");\n    divButton.textContent = \"×\";\n    divButton.classList.add(\"deleteProjectBtn\");\n    $yourProjects.appendChild(div);\n    div.appendChild(divText);\n    div.appendChild(divButton);\n}\n\nconst projectInput = {\n    getInputName() {\n        return $projectInputField.value;\n    },\n    clearInput() {\n        $projectInputField.value = \"\";\n    }\n}\n\nconst taskInput = {\n    getInputName() {\n        return $taskInputField.value;\n    },\n    clearInput() {\n        $taskInputField.value = \"\";\n    }\n}\n\nfunction validateProjectName(name) { // Validating through className, which is the same as the projectName ; pinpoint any collision of class name\n    const Divs = $yourProjects.querySelectorAll(\"div\");\n    for (const div of Divs) {\n        if (div.classList.contains(name)) {\n            alert(\"Error, projects cannot have the same name!\");\n            return false;\n        }\n    }\n    if (name.includes(\" \")) {\n        alert(\"Project names cannot contain whitespaces.\");\n        return false;\n    }\n    return true; \n}\n\n\nexport {renderProjectAdd, $leftSidePanel, validateProjectName, projectInput, taskInput};","import { $leftSidePanel, taskInput } from \"./LeftPanelDOM\";\n\nconst $todoModal = document.querySelector(\"#todoModal\");\nconst $projectDropdown = $todoModal.querySelector(\"#projectselect\");\n\n\nconst modifyTodoModal = {\n    openModal() {\n        $todoModal.style.display = \"block\";\n    },\n    closeModal() {\n        $todoModal.style.display = \"none\";\n    },\n    setInput() {\n        const $modalInput = $todoModal.querySelector(\"input\");\n        $modalInput.value = taskInput.getInputName();\n    },\n    addToDropdown(projectName) {\n        const $option = document.createElement(\"option\");\n        $option.style.value = projectName;\n        $option.textContent = projectName;\n        $projectDropdown.appendChild($option);\n    },\n    deleteFromDropdown(projectName) {\n        for (const child of $projectDropdown.children) {\n            if (child.textContent == projectName) {\n                $projectDropdown.removeChild(child);\n            }\n        }\n    }\n}\n\n\nexport {$todoModal, modifyTodoModal, $projectDropdown};\n\n","import { projectInput, renderProjectAdd, validateProjectName } from \"./LeftPanelDOM\";\nimport { $projectDropdown, modifyTodoModal } from \"./Modal\";\nimport { modifyDisplay } from \"./RightPanelDOM\";\n\nconst allProjects = [];\n\nfunction createProject(title) {\n    this.title = title;\n    this.ids = [];\n}\n\nconst modifyProject = {\n    deleteProject(projectName) {\n        for (let i = 0; i < allProjects.length; i++) {\n            if (allProjects[i].title == projectName) {\n                allProjects.splice(i, 1);\n                break;\n            } \n        }\n    },\n\n    addProject(projectName) {\n        if (validateProjectName(projectName)) {\n            renderProjectAdd(projectName);\n            const projectObject = new createProject(projectName);\n            allProjects.push(projectObject);\n            projectInput.clearInput();\n            modifyTodoModal.addToDropdown(projectName);\n            modifyDisplay.clearDisplay();\n            modifyDisplay.renderProject(projectName);\n        }\n    }\n}\n\nfunction checkProjectExistance() {\n    return !!($projectDropdown.children.length);\n}\n\nexport {createProject, allProjects, modifyProject, checkProjectExistance}; ","import { $leftSidePanel, projectInput, taskInput } from \"./LeftPanelDOM\";\nimport { modifyTodoModal } from \"./Modal\";\nimport { modifyDisplay } from \"./RightPanelDOM\";\nimport { checkProjectExistance, modifyProject } from \"./projects\";\n\nconst $createProjBtn = $leftSidePanel.querySelector(\".createProjectButton\");\nconst $createTaskBtn = $leftSidePanel.querySelector(\".createTaskButton\");\nconst $homeBtn = $leftSidePanel.querySelector(\".projectHome\");\nconst $projectsPanel = $leftSidePanel.querySelector(\".yourProjects\");\n\n$createTaskBtn.addEventListener('click', function() { // Create Task \n    if (checkProjectExistance()) {\n        modifyTodoModal.openModal();\n        modifyTodoModal.setInput();\n        taskInput.clearInput();\n    } else {\n        alert(\"Must create a project first!\");\n        taskInput.clearInput();\n    }\n})\n\n$createProjBtn.addEventListener('click', function() { // Create Project\n    modifyProject.addProject(projectInput.getInputName());\n});\n\n$leftSidePanel.addEventListener('click', function(e) {  // Delete project\n    if (e.target.classList.contains(\"deleteProjectBtn\")) {\n        const projectName = e.target.parentNode.querySelector(\"p\").textContent;\n        modifyProject.deleteProject(projectName); // removing from the array\n        modifyTodoModal.deleteFromDropdown(projectName); //removing from the dropdown\n        if (projectName == modifyDisplay.returnActivePage()) { //removing from the display\n            modifyDisplay.clearDisplay();\n            modifyDisplay.renderHomePage();\n        };\n        e.target.parentNode.remove();  // removing from the dom tree\n    }\n})\n\n\n$projectsPanel.addEventListener('click', function(e) {\n    if (e.target.querySelector(\"p\") != null) { // validate whether there is any p element even, fixes issues with deleting\n        const projectName = e.target.querySelector(\"p\").textContent;\n        if (modifyDisplay.returnActivePage() != projectName) {\n            modifyDisplay.clearDisplay();\n            modifyDisplay.renderProject(projectName); \n        }\n    }\n})\n\n$homeBtn.addEventListener('click', function() {\n    modifyDisplay.clearDisplay();\n    modifyDisplay.renderHomePage();\n})","import { $todoModal, modifyTodoModal } from \"./Modal\";\n\nconst $closeButton = $todoModal.querySelector(\".close\");\n$closeButton.addEventListener('click', function() {\n    modifyTodoModal.closeModal();\n})\n"],"names":["$rightSidePanel","document","querySelector","modifyDisplay","renderHomePage","$h1","createElement","$h2","textContent","appendChild","renderProject","projectName","$mainDiv","classList","add","$headerDiv","returnActivePage","slice","clearDisplay","replaceChildren","$leftSidePanel","$yourProjects","$projectInputField","$taskInputField","projectInput","getInputName","value","clearInput","taskInput","$todoModal","$projectDropdown","modifyTodoModal","openModal","style","display","closeModal","setInput","addToDropdown","$option","deleteFromDropdown","child","children","removeChild","allProjects","createProject","title","this","ids","modifyProject","deleteProject","i","length","splice","addProject","name","Divs","querySelectorAll","div","contains","alert","includes","validateProjectName","divText","divButton","renderProjectAdd","projectObject","push","$createProjBtn","$createTaskBtn","$homeBtn","$projectsPanel","addEventListener","e","target","parentNode","remove"],"sourceRoot":""}