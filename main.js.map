{"version":3,"file":"main.js","mappings":"mBAAA,MAAMA,EAAiBC,SAASC,cAAc,YACxCC,EAAgBH,EAAeE,cAAc,iBAC7CE,EAAqBJ,EAAeE,cAAc,SAelDG,EAAe,CACjBC,aAAY,IACDF,EAAmBG,MAE9B,UAAAC,GACIJ,EAAmBG,MAAQ,EAC/B,GCrBEE,EAAc,GAEpB,SAASC,EAAcC,GACnBC,KAAKD,MAAQA,EACbC,KAAKC,IAAM,EACf,CAEA,MAAMC,EAAgB,CAClB,aAAAC,CAAcC,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAYS,OAAQD,IACpC,GAAIR,EAAYQ,GAAGN,OAASK,EAAa,CACrCP,EAAYU,OAAOF,EAAG,GACtB,KACJ,CAER,EAEA,UAAAG,CAAWJ,GACP,GDMR,SAA6BK,GACzB,MAAMC,EAAOnB,EAAcoB,iBAAiB,OAC5C,IAAK,MAAMC,KAAOF,EACd,GAAIE,EAAIC,UAAUC,SAASL,GAEvB,OADAM,MAAM,+CACC,EAGf,OAAO,CACX,CCfYC,CAAoBZ,GAAc,EDhB9C,SAA0BA,GACtB,MAAMQ,EAAMvB,SAAS4B,cAAc,OACnCL,EAAIC,UAAUK,IAAI,GAAGd,IAAe,cACpC,MAAMe,EAAU9B,SAAS4B,cAAc,KACvCE,EAAQC,YAAc,GAAGhB,IACzB,MAAMiB,EAAYhC,SAAS4B,cAAc,UACzCI,EAAUD,YAAc,IACxBC,EAAUR,UAAUK,IAAI,oBACxB3B,EAAc+B,YAAYV,GAC1BA,EAAIU,YAAYH,GAChBP,EAAIU,YAAYD,EACpB,CCMYE,CAAiBnB,GACjB,MAAMoB,EAAgB,IAAI1B,EAAcM,GACxCP,EAAY4B,KAAKD,GACjB/B,EAAaG,YACjB,CACJ,GCvBmBR,EAAeE,cAAc,wBAErCoC,iBAAiB,QAAS,WACrCxB,EAAcM,WAAWf,EAAaC,eAC1C,GAEAN,EAAesC,iBAAiB,QAAS,SAASC,GAC9C,GAAIA,EAAEC,OAAOf,UAAUC,SAAS,oBAAqB,CACjD,MAAMV,EAAcuB,EAAEC,OAAOC,WAAWvC,cAAc,KAAK8B,YAC3DlB,EAAcC,cAAcC,GAC5BuB,EAAEC,OAAOC,WAAWC,QACxB,CACJ,GCfA,MAAMC,EAAkB1C,SAASC,cAAc,aAEzB,CAClB,cAAA0C,GACI,MAAMC,EAAM5C,SAAS4B,cAAc,MAC7BiB,EAAM7C,SAAS4B,cAAc,MACnCgB,EAAIb,YAAc,4BAClBc,EAAId,YAAc,uDAClBW,EAAgBT,YAAYW,GAC5BF,EAAgBT,YAAYY,EAChC,EAEA,YAAAC,GACIJ,EAAgBK,iBACpB,ICVUJ,gB","sources":["webpack://webpack-template/./src/LeftPanelDOM.js","webpack://webpack-template/./src/projects.js","webpack://webpack-template/./src/EventListeners.js","webpack://webpack-template/./src/RightPanelDOM.js","webpack://webpack-template/./src/index.js"],"sourcesContent":["const $leftSidePanel = document.querySelector(\".sidebar\");\nconst $yourProjects = $leftSidePanel.querySelector(\".yourProjects\");\nconst $projectInputField = $leftSidePanel.querySelector(\"input\");\n\nfunction renderProjectAdd(projectName) {\n    const div = document.createElement(\"div\");\n    div.classList.add(`${projectName}`, \"projectDiv\");\n    const divText = document.createElement(\"p\");\n    divText.textContent = `${projectName}`;\n    const divButton = document.createElement(\"button\");\n    divButton.textContent = \"X\";\n    divButton.classList.add(\"deleteProjectBtn\");\n    $yourProjects.appendChild(div);\n    div.appendChild(divText);\n    div.appendChild(divButton);\n}\n\nconst projectInput = {\n    getInputName() {\n        return $projectInputField.value;\n    },\n    clearInput() {\n        $projectInputField.value = \"\";\n    }\n}\n\nfunction validateProjectName(name) { // Validating through className, which is the same as the projectName ; pinpoint any collision of class name\n    const Divs = $yourProjects.querySelectorAll(\"div\");\n    for (const div of Divs) {\n        if (div.classList.contains(name)) {\n            alert(\"Error, projects cannot have the same name!\");\n            return false;\n        }\n    }\n    return true; \n}\n\n\nexport {renderProjectAdd, $leftSidePanel, validateProjectName, projectInput};","import { projectInput, renderProjectAdd, validateProjectName } from \"./LeftPanelDOM\";\n\nconst allProjects = [];\n\nfunction createProject(title) {\n    this.title = title;\n    this.ids = [];\n}\n\nconst modifyProject = {\n    deleteProject(projectName) {\n        for (let i = 0; i < allProjects.length; i++) {\n            if (allProjects[i].title == projectName) {\n                allProjects.splice(i, 1);\n                break;\n            } \n        }\n    },\n\n    addProject(projectName) {\n        if (validateProjectName(projectName)) {\n            renderProjectAdd(projectName);\n            const projectObject = new createProject(projectName);\n            allProjects.push(projectObject);\n            projectInput.clearInput();\n        }\n    }\n}\n\nexport {createProject, allProjects, modifyProject}; ","import { $leftSidePanel, projectInput } from \"./LeftPanelDOM\";\nimport { modifyProject } from \"./projects\";\n\nconst $createProjBtn = $leftSidePanel.querySelector(\".createProjectButton\");\n\n$createProjBtn.addEventListener('click', function() {\n    modifyProject.addProject(projectInput.getInputName());\n});\n\n$leftSidePanel.addEventListener('click', function(e) { \n    if (e.target.classList.contains(\"deleteProjectBtn\")) {\n        const projectName = e.target.parentNode.querySelector(\"p\").textContent;\n        modifyProject.deleteProject(projectName); // removing from the array\n        e.target.parentNode.remove();  // removing from the dom tree\n    }\n})","const $rightSidePanel = document.querySelector(\".display\"); \n\nconst modifyDisplay = {\n    renderHomePage() {\n        const $h1 = document.createElement(\"h1\");\n        const $h2 = document.createElement(\"h2\");\n        $h1.textContent = \"âœ¨ Ready to be productive?\";\n        $h2.textContent = \"Select a project or create a new one to get started!\";\n        $rightSidePanel.appendChild($h1);\n        $rightSidePanel.appendChild($h2);\n    }, \n\n    clearDisplay() {\n        $rightSidePanel.replaceChildren();\n    },\n\n}\n\nexport {modifyDisplay};","import \"./styles.css\";\nimport \"./EventListeners.js\";\nimport { modifyDisplay} from \"./RightPanelDOM.js\";\n\nmodifyDisplay.renderHomePage();\nfunction createTodo(title, description, dueDate, priority) {\n    this.title = (typeof title === \"string\") ? title : null;\n    this.description = (typeof description === \"string\") ? description : null;\n    this.dueDate = (typeof dueDate === \"string\") ? dueDate : null;\n    this.priority = (typeof priority === \"string\") ? priority : null;\n    this.id = crypto.randomUUID();\n}\n\n\n"],"names":["$leftSidePanel","document","querySelector","$yourProjects","$projectInputField","projectInput","getInputName","value","clearInput","allProjects","createProject","title","this","ids","modifyProject","deleteProject","projectName","i","length","splice","addProject","name","Divs","querySelectorAll","div","classList","contains","alert","validateProjectName","createElement","add","divText","textContent","divButton","appendChild","renderProjectAdd","projectObject","push","addEventListener","e","target","parentNode","remove","$rightSidePanel","renderHomePage","$h1","$h2","clearDisplay","replaceChildren"],"sourceRoot":""}